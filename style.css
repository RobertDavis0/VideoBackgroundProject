/* Importing/Linking to thr Libre baskerville Google Font */
@import url('https://fonts.googleapis.com/css2?family=Libre+Baskerville:wght@400;700&display=swap');

* {
    margin: 0;

    /* "box-sizing: border-box;" inclues padding and border when setting a width or height */
    box-sizing: border-box;
}

body {
    font-family: 'Libre Baskerville', serif;
    line-height: 1.5;
}

h1 {
    font-weight: 400px;
    font-size: 60px;
    line-height: 1;
    margin-bottom: 20px;
}

a {
    /* Removes the underline */
    text-decoration: none;
}

#main {
    /* VH (Viewport height) determines the height of an element by setting it to a percentage of th viewport (NOTE: VW is used for width) */
    height: 100vh;

    display: flex;
    flex-direction: column;
    /* NOTE: The following align-items and justify-content styles will only end up applying to the content div (AKA the third div) */
    align-items: center;
    justify-content: center;

    /* So the text does NOT go up against the left and the right edges on smaller screen sizes */
    padding: 0 20px;

    /* Setting "position: relative;" here so the #video-container & #cover divs will be positioned relative to this element instead of the root (AKA HTML) element */
    position: relative;
}

#video-container {
    /* First frame of the video in case the video does NOT immediately start playing */
    background-image: url("frame.png");
    width: 100%;
    height: 100%;
    position: absolute;
    top: 0;
    left: 0;
    background-size: cover;
    background-position: center;
}

video {
    width: 100%;
    height: 100%;
    /* The object-fit property determines how a video-image is resized to fit inside of its container (AKA Parent Element). Setting th value to cover cause the video/image to retain its aspect ration and fill the given dimenson. (NOTE: In this case it causes the video/image to still take up the full vertical space on smaller screen sizes and take up the full horizontal space on wider screen sizes). */
    object-fit: cover;
}

#cover {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-color: rgba(0, 0, 0, 0.7);
  }

  #content {
    color: white;
    text-align: center;
    z-index: 1;
  }

  #click {
    /* Inline-block allows you to set top and bottom margin as well as height and width. This is NOT the case with Inline */
    display: inline-block;
    border: 2px solid white;
    padding: 10px 30px;
    margin-top: 25px;
    background-color: #4b5163;
    /* Unlike other elements a tags do NOT inherit the color porperty */
    color: white;
    font-size: 20px;
    opacity: 0.8;
    border-radius: 10px;
  }

  #click:hover {
    /* Changes the size of the element */
    transform: scale(0.95);
  }